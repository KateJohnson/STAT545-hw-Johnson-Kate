filter(continent=="Asia") %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = country)) +
geom_line(lwd=1) + scale_color_manual(values = country_colors) +
theme_bw()
gapminder %>%
filter(continent=="Asia") %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = country)) +
geom_line(lwd=1, show.legent=FALSE) + scale_color_manual(values = country_colors) +
theme_bw()
gapminder %>%
filter(continent=="Asia") %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = country)) +
geom_line(lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
theme_bw()
filter(gapminder, continent=="Americas") %>%
select(country, gdpPercap, year) %>%
ggplot(aes(x=year, y=gdpPercap)) + geom_point(aes(colour=country), alpha=0.3) + geom_smooth() + theme_classic()
gapminder %>%
filter(continent=="Asia") %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = country)) +
geom_line(lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
theme_bw()
gapminder %>%
filter(continent=="Asia") %>%
ggplot(aes(x = year, y = gdpPerCap, group = country, color = country)) +
geom_line(lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
theme_bw()
gapminder %>%
filter(continent=="Asia") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country)) +
geom_line(lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
theme_bw()
gapminder %>%
filter(continent=="Asia") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country)) +
geom_line(lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
+ geom_smooth() +
theme_bw()
gapminder %>%
filter(continent=="Asia") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country)) +
geom_line(lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
geom_smooth() +
theme_bw()
gapminder %>%
filter(continent=="Asia") %>%
ggplot(aes(x = year, y = gdpPercap, group = country, color = country)) +
geom_line(lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
theme_bw()
gapminder %>%
filter(continent=="Asia") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
theme_bw()
gapminder %>%
filter(continent=="Asia") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
stat_smooth() + theme_bw()
gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
stat_smooth() + theme_bw()
gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
stat_smooth() + theme_bw() geom_text(aes(label=country)
gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
stat_smooth() + theme_bw() + geom_text(aes(label=country)
gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
stat_smooth() + theme_bw() + geom_text(aes(label=country))
gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
stat_smooth() +
geom_text(subset(gapminder, country %in% c("Canada","United States") & year==2007),
aes(x=year, y=gdpPercap,label=country)) +
theme_bw()
subset(gapminder, country %in% c("Canada","United States")
subset(gapminder, country %in% c("Canada","United States") & year==2007)
gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
stat_smooth() +
geom_text(subset(gapminder, country %in% c("Canada","United States") & year==2007),
aes(label=country)) +
theme_bw()
gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
stat_smooth() + theme_bw()
p +  geom_text(subset(gapminder, country %in% c("Canada","United States") & year==2007),
aes(label=country))
p <- gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
stat_smooth() + theme_bw()
p +  geom_text(subset(gapminder, country %in% c("Canada","United States") & year==2007),
aes(label=country))
p +  geom_text(subset(gapminder, country %in% c("Canada","United States") & year==2007),
aes(x=year, y=gdpPercap, label=country))
p +            geom_text(aes(x=year, y=gdpPercap, label=country))
subset(gapminder, country %in% c("Canada","United States") & year==2007)
p +  geom_text(subset(gapminder, country %in% c("Canada","United States") & year==2007),
aes(x=year, y=gdpPercap, label=country))
p +  geom_text(data=subset(gapminder, country %in% c("Canada","United States") & year==2007),
aes(x=year, y=gdpPercap, label=country))
p +  geom_text(data=subset(gapminder, country %in% c("Canada","United States") & year==2002),
aes(x=year, y=gdpPercap, label=country))
p +  geom_text(data=subset(gapminder, country %in% c("Canada","United States") & year==2002),
aes(x=year, y=gdpPercap, label=country), vjust=1)
p +  geom_text(data=subset(gapminder, country %in% c("Canada","United States") & year==2002),
aes(x=year, y=gdpPercap, label=country), hjust=1)
p +  geom_text(data=subset(gapminder, country %in% c("Canada","United States") & year==2002),
aes(x=year, y=gdpPercap, label=country), hjust=1.5)
p +  geom_text(data=subset(gapminder, country %in% c("Canada","United States") & year==2002),
aes(x=year, y=gdpPercap, label=country), hjust=1.2)
p <- gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
theme_bw()
p +  geom_text(data=subset(gapminder, country %in% c("Canada","United States") & year==2002),
aes(x=year, y=gdpPercap, label=country), hjust=1.2)
p <- gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
theme_bw() + xlab("Year") + ylab(Per Capita GDP)
p <- gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
theme_bw() + xlab("Year") + ylab("Per Capita GDP"")
p +  geom_text(data=subset(gapminder, country %in% c("Canada","United States") & year==2002),
p <- gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
theme_bw() + xlab("Year") + ylab("Per Capita GDP")
p +  geom_text(data=subset(gapminder, country %in% c("Canada","United States") & year==2002),
aes(x=year, y=gdpPercap, label=country), hjust=1.2)
p <- gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
theme_bw() + xlab("Year") + ylab("Per Capita GDP")
p <- p +  geom_text(data=subset(gapminder, country %in% c("Canada","United States") & year==2002),
aes(x=year, y=gdpPercap, label=country), hjust=1.2)
p
p <- gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
theme_bw() + xlab("Year") + ylab("Per Capita GDP")
p
p <- gapminder %>%
filter(continent=="Americas") %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_line(aes(color=country),lwd=1, show.legend=FALSE) + scale_color_manual(values = country_colors) +
theme_bw() + xlab("Year") + ylab("Per Capita GDP")
p <- p +  geom_text(data=subset(gapminder, country %in% c("Canada","United States") & year==2002),
aes(x=year, y=gdpPercap, label=country), hjust=1.2)
p
ggsave(p, file="GDP_Americas.pdf", width=4, height=4)
ggsave(p, file="GDP_Americas.pdf", width=5, height=4)
ggsave(p, file="GDP_Americas.pdf", width=6, height=4)
ggsave(p, file="GDP_Americas.png", width=6, height=4)
ggsave(p, file="GDP_Americas.png", width=4, height=3)
ggsave(p, file="GDP_Americas.png", width=6, height=4)
ggsave(p, file="GDP_Americas.png", width=4, height=3, scale=0.75)
ggsave(p, file="GDP_Americas.png", width=4, height=3, scale=0.5)
ggsave(p, file="GDP_Americas.png", width=4, height=3, scale=1.5)
ggsave(p, file="GDP_Americas.png", width=4, height=2, scale=1.5)
ggsave(p, file="GDP_Americas.png", width=4, height=3, scale=1.5)
ggsave(p, file="GDP_Americas.png", width=4, height=3, scale=1.5, dpi=300)
ggsave(p, file="GDP_Americas.png", width=2, height=1, scale=2.5, dpi=300)
ggsave(p, file="GDP_Americas.png", width=2, height=1, scale=0.5, dpi=300)
ggsave(p, file="GDP_Americas.png", width=2, height=1, scale=4, dpi=300)
ggsave(p, file="GDP_Americas.png", width=4, height=3, scale=1.5, dpi=300)
levels(gapminder.noa$continent)
head(gapminder.noa)
levels(gapminder.noa$continent)
head(gapminder) # orginal data
gapminder.noa <- gapminder %>%
filter(country != "Oceania") %>%
group_by(continent) %>%
mutate(med.gdp = median(gdpPercap)) %>%
arrange(desc(med.gdp))
head(gapminder.noa)
gapminder.noa <- gapminder %>%
filter(continent!= "Oceania") %>%
group_by(continent) %>%
mutate(med.gdp = median(gdpPercap)) %>%
arrange(desc(med.gdp))
head(gapminder.noa)
levels(gapminder.noa$continent)
gapminder.noa <- gapminder %>%
filter(continent!= "Oceania") %>%
group_by(continent) %>%
mutate(med.gdp = median(gdpPercap)) %>%
arrange(desc(med.gdp)) %>%
fct_drop()
gapminder.noa <- gapminder %>%
filter(continent!= "Oceania") %>%
group_by(continent) %>%
mutate(med.gdp = median(gdpPercap)) %>%
arrange(desc(med.gdp))
gapminder.noa$continent <- fct_drop(gapminder.noa$continent)
head(gapminder.noa)
levels(gapminder.noa$continent)
sample(c(1,1.05), size=1000, replace=TRUE, prob=c(0.5,0.5))
sum(sample(c(1,1.05), size=1000, replace=TRUE, prob=c(0.5,0.5)))
sum(sample(c(1,1.05), size=1000, replace=TRUE, prob=c(0.5,0.5)))
sum(sample(c(1,1.05), size=1000, replace=TRUE, prob=c(0.5,0.5)))
rep(sum(sample(c(1,1.05), size=1000, replace=TRUE, prob=c(0.5,0.5))),1000)
sum(sample(c(1,1.05), size=1000, replace=TRUE, prob=c(0.5,0.5)))
sum(sample(c(1,1.05), size=1000, replace=TRUE, prob=c(0.5,0.5)))
sum(sample(c(1,1.05), size=1000, replace=TRUE, prob=c(0.5,0.5)))
x <- rep(0,1000)
x
for (i in 1:length(x)){
x[i] <- sum(sample(c(1,1.05), size=1000, replace=TRUE, prob=c(0.5,0.5)))
}
x
length(x)
x <- rep(0,1000)
for (i in 1:length(x)){
x[i] <- (sum(sample(c(1,1.05), size=1000, replace=TRUE, prob=c(0.5,0.5))))-length(x)
}
x
sort(x)
hist(x)
for (i in 1:length(x)){
x[i] <- (sum(sample(c(1,1.05), size=length(x), replace=TRUE, prob=c(0.5,0.5))))-length(x)
}
x
x <- rep(0,10000)
for (i in 1:length(x)){
x[i] <- (sum(sample(c(1,1.05), size=length(x), replace=TRUE, prob=c(0.5,0.5))))-length(x)
}
ggplot(aes(x)) + geom_hist()
hist(x)
x
length(x)
library(ggplot2)
ggplot(aes(x)) + geom_histogram(aes(y=..density..))
a <- rep(0,10000)
for (i in 1:length(a)){
a[i] <- (sum(sample(c(1,1.05), size=length(a), replace=TRUE, prob=c(0.5,0.5))))-length(a)
}
ggplot(aes(a)) + geom_histogram(aes(y=..density..))
hist(a)
gglot(aes(a)) + geom_histogram()
library(ggplot2)
gglot(aes(a)) + geom_histogram()
ggplot(aes(a)) + geom_histogram()
a
ggplot(aes(x=a)) + geom_histogram()
as.data.frame(a)
ggplot(aes(x=a)) + geom_histogram()
a <- as.data.frame(a)
ggplot(aes(x=a)) + geom_histogram()
h <- hist(a, plot=FALSE)
a <- rep(0,10000)
for (i in 1:length(a)){
a[i] <- (sum(sample(c(1,1.05), size=length(a), replace=TRUE, prob=c(0.5,0.5))))-length(a)
}
hist(a)
h <- hist(a, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h)
plot(h, ylab="Probability")
a <- rep(0,100000)
for (i in 1:length(a)){
a[i] <- (sum(sample(c(1,1.05), size=length(a), replace=TRUE, prob=c(0.5,0.5))))-length(a)
}
h <- hist(a, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h, ylab="Probability")
plot(h, ylab="Probability", xlab="Profit ($)")
h <- hist(a, breaks=100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h, ylab="Probability", xlab="Profit ($)")
library(tidyverse)
library(singer)
library(stringr)
library(glue)
glue("My name is {My_name},", "My age two years ago was {My_age -2}")
My_name <- "Guilio"
My_age <- 109
My_color <- "Blue"
glue("My name is {My_name},", "My age two years ago was {My_age -2}")
glue("My name is {My_name},", " My age two years ago was {My_age -2}")
paste0("My name is ",My_name,", My age was ",My_age-2)
glue("My name is
{My_name},", "
My age two years ago was
{My_age -2}")
glue("My name is
{My_name},", "
My age two years ago was
{My_age -2}",
My_name="Another Name",
My_age=10)
Sys.Date()
glue("Today is {Sys.Date()} and the sun shines")
glue("Today is {Today_date} and the sun shines",
Today_date = Sys.Date())
phrase <- "Today is {Today_date} and the sun shines"
glue(phrase,
Today_date = Sys.Date())
glue(phrase,
Today_date = format(Sys.Date(), "%A, %B %d"))
glue(phrase,
Today_date = format(Sys.Date(), "%A, %B %d, %Y"))
singer_locations %>%
glue_data("{artist_name} is from {city}.") %>%
head()
table(singer$artist_name)
library(singer)
table(singer$artist_name)
singer_locations %>%
glue_data("{artist_name} is from {city}.") %>%
head()
getNamespaceExports("stringr")
getNamespaceExports("stringr") %>%
str_view("str_")
getNamespaceExports("stringr") %>%
str_view("str_")
getNamespaceExports("stringr")
getNamespaceExports("stringr") %>%
str_subset("str_")
getNamespaceExports("stringr") %>%
str_view("str_")
library(stringr)
getNamespaceExports("stringr") %>%
str_view("str_")
install.packages("htmlwidgets")
library(htmlwidgets)
getNamespaceExports("stringr") %>%
str_view("str_")
getNamespaceExports("stringr") %>%
str_subset("str_")
places <- unique(singer_locations$city)
places %>%
str_subset("york")
places %>%
str_to_lower() %>%
str_subset("york")
places %>%
str_subset("[Yy]ork")
places %>%
str_subset(coll("york"), ignore_case = TRUE)
places %>%
str_subset(coll("york"), ignore.case = TRUE)
places %>%
str_subset(coll("york", ignore.case = TRUE))
places %>%
str_subset("York$")
places %>%
str_subset("^York")
places %>%
str_subset("york")
places %>%
str_subset(coll("york", ignore.case = TRUE))
"[:digit:]"
places %>%
str_subset("[:digit:]")
places %>%
str_subset("B.a")
places %>%
str_subset("B.a2") # B then another character then a
places %>%
str_subset("B.a*") # B then another character then 0,1 or more a's (there is nothing)
places %>%
str_subset("[Nn]ew [Yy]ork") # B then another character then 0,1 or more a's (there is nothing)
mean(a)
x <- c(1,2,NA)
isNA(x)
is.na(x)
length(is.na(x))
length(which(is.na(x)))
suppressPackageStartupMessages(library(tidyverse))
library(singer)
?singer
str(singer)
data("songs")
songs
data("locations")
locations
data("singer_locations")
singer_locations
str(singer_locations)
View(singer_locations)
data("locations")
locations
data("songs")
songs
data("city")
View(songs)
View(singer_locations)
kable(head(singer_locations))
library(knitr)
kable(head(singer_locations))
View(singer_locations)
View(locations)
library(gapminder)
kable(head(gapminder))
lm_fit <- function(mydata) {
the_lm <- lm(lifeExp ~ year, data=mydata)
coef(the_lm)
}
lm_fit(gapminder)
lm_fit <- function(mydata) {
the_lm <- lm(lifeExp ~ I(year-1952), data=mydata)
coef(the_lm)
}
lm_fit(gapminder)
lm_fit <- function(mydata) {
the_lm <- lm(lifeExp ~ year, data=mydata)
coef(the_lm)
}
lm_fit(gapminder)
lm_fit <- function(mydata, offset) {
the_lm <- lm(lifeExp ~ I(year-offset), data=mydata)
coef(the_lm)
}
lm_fit(gapminder, 1952)
gapminder %>%
filter(country=="France") %>%
lm_fit()
lm_fit <- function(mydata, offset=1952) {
the_lm <- lm(lifeExp ~ I(year-offset), data=mydata)
coef(the_lm)
}
lm_fit(gapminder)
gapminder %>%
filter(country=="France") %>%
lm_fit()
quad_fit <- function(mydata, offset=1952) {
the_quad <- lm(lifeExp ~ I(year-offset) + year^2, data=mydata)
coef(the_quad)
}
quad_fit(gapminder)
lm(lifeExp ~ year + I(year^2), data=gapminder)
lm(lifeExp ~ I(year-1952) + I(year^2), data=gapminder)
lm(lifeExp ~ I(year-1952) + I((year-offset)^2), data=gapminder)
lm(lifeExp ~ I(year-1952) + I(I(year-offset)^2), data=gapminder)
lm(lifeExp ~ I(year-1952), gapminder)
lm(lifeExp ~ I(year-1952) + I(year^2), data=gapminder)
year2 <- (gapminder$year)^2
year2
1952^2
lm(lifeExp ~ I(year-1952) + year2, data=gapminder)
lm(lifeExp ~ I(year-1952) + I(year^2), data=gapminder)
lm(lifeExp ~ I(year-1952) + year2, data=gapminder)
lm(lifeExp ~ I(year-1952) + I(year^2), data=gapminder)
lm(lifeExp ~ I(year-1952) + I((year-1952)^2), data=gapminder)
lm(lifeExp ~ I(year-1952) + I(year^2), data=gapminder)
lm(lifeExp ~ I(year-1952) + I(year^2), data=gapminder)
lm(lifeExp ~ I(year-1952) + I((year-1952)^2), data=gapminder)
lm(lifeExp ~ I(year-1952) + I((year-1952)^2), data=gapminder)
quad_fit <- function(mydata, offset=1952) {
the_quad <- lm(lifeExp ~ I(year-offset) + I((year-1952)^2), data=mydata)
coef(the_quad)
}
quad_fit(gapminder)
quad_fit <- function(mydata, offset=1952) {
the_quad <- lm(lifeExp ~ I(year-offset) + I((year-offset)^2), data=mydata)
coef(the_quad)
}
quad_fit(gapminder)
lm(lifeExp ~ I(year-1952) + I((year-1952)^2), data=gapminder)
quad_fit <- function(mydata, offset=1952) {
the_quad <- lm(lifeExp ~ I(year-offset) + I((year-offset)^2), data=mydata)
coef(the_quad)
}
quad_fit(gapminder)
library(MASS)
robust_fit <- function(mydata, offset=1952) {
the_robust <- MASS::rlm(lifeExp ~ I(year-offset), data=mydata)
coef(the_robust)
}
robust_fit(gapminder)
robust_fit <- function(mydata, offset=1952, method="M") {
the_robust <- MASS::rlm(lifeExp ~ I(year-offset), method=method, data=mydata)
coef(the_robust)
}
robust_fit(gapminder)
robust_fit <- function(mydata, offset=1952, method="MM") {
the_robust <- MASS::rlm(lifeExp ~ I(year-offset), method=method, data=mydata)
coef(the_robust)
}
robust_fit(gapminder)
robust_fit <- function(mydata, offset=1952, method="M") {
the_robust <- MASS::rlm(lifeExp ~ I(year-offset), method=method, data=mydata)
coef(the_robust)
}
robust_fit(gapminder)
